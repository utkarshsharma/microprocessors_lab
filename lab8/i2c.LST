C51 COMPILER V9.53.0.0   I2C                                                               09/29/2014 15:28:51 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN i2c.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE i2c.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include<reg51.h>
   2          #include "delay.h"
   3          #include "i2c.h"
   4          
   5          sbit SCL=P0^2;    //SCL Connected to P3.6
   6          sbit SDA=P0^1;    //SDA Connected to P3.7
   7          
   8          void i2cClock(void)
   9          {
  10   1        delay_us(1);
  11   1        SCL = 1;    // Wait for Some time and Pull the SCL line High
  12   1      
  13   1        delay_us(1);        // Wait for Some time
  14   1        SCL = 0;    // Pull back the SCL line low to Generate a clock pulse
  15   1      }
  16          
  17          void i2cStart()
  18          {
  19   1      
  20   1        SCL = 0;    // Pull SCL low
  21   1          
  22   1        SDA = 1;        // Pull SDA High
  23   1        delay_us(1);
  24   1      
  25   1        SCL = 1;    //Pull SCL high
  26   1        delay_us(1);
  27   1      
  28   1        SDA = 0;        //Now Pull SDA LOW, to generate the Start Condition
  29   1        delay_us(1);
  30   1      
  31   1        SCL = 0;        //Finally Clear the SCL to complete the cycle
  32   1      
  33   1      }
  34          
  35          void i2cStop(void)
  36          {
  37   1      
  38   1        SCL = 0;      // Pull SCL low
  39   1        delay_us(1);
  40   1      
  41   1        SDA = 0;      // Pull SDA  low
  42   1        delay_us(1);
  43   1      
  44   1        SCL = 1;      // Pull SCL High
  45   1        delay_us(1);
  46   1      
  47   1        SDA = 1;      // Now Pull SDA High, to generate the Stop Condition
  48   1      }
  49          
  50          void i2cWrite(unsigned char dat)
  51          {
  52   1        unsigned char i;
  53   1      
  54   1        for(i=0;i<8;i++)     // loop 8 times to send 1-byte of data
  55   1         {
C51 COMPILER V9.53.0.0   I2C                                                               09/29/2014 15:28:51 PAGE 2   

  56   2          SDA = dat & 0x80;    // Send Bit by Bit on SDA line
  57   2          i2cClock();        // Generate Clock at SCL
  58   2          dat = dat<<1;
  59   2          }
  60   1            SDA = 1;           // Set SDA at last
  61   1      
  62   1      }
  63          
  64          unsigned char i2cRead(void)
  65          {
  66   1        unsigned char i, dat=0x00;
  67   1      
  68   1           SDA=1;         //Make SDA as I/P
  69   1        for(i=0;i<8;i++)    // loop 8times read 1-byte of data
  70   1         {
  71   2          delay_us(1);
  72   2      
  73   2      
  74   2          SCL = 1;      // Pull SCL High
  75   2          delay_us(1);
  76   2      
  77   2          dat = dat<<1;   //dat is Shifted each time and
  78   2          dat = dat | SDA;  //ORed with the received bit to pack into byte
  79   2      
  80   2          SCL = 0;      // Clear SCL to complete the Clock
  81   2           }
  82   1         return dat;             // Finally return the received Byte*
  83   1      }
  84          
  85          void i2cAck()
  86          {
  87   1        SDA = 0;    //Pull SDA low to indicate Positive ACK
  88   1        i2cClock(); //Generate the Clock
  89   1        SDA = 1;    // Pull SDA back to High(IDLE state)
  90   1      }
  91          
  92          void i2cNAck()
  93          {
  94   1        SDA = 1;    //Pull SDA high to indicate Negative/NO ACK
  95   1         i2cClock();      // Generate the Clock  
  96   1        SCL = 1;    // Set SCL */
  97   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    177    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
