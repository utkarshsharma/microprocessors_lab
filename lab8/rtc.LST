C51 COMPILER V9.53.0.0   RTC                                                               09/29/2014 15:33:21 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE RTC
OBJECT MODULE PLACED IN rtc.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE rtc.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "rtc.h"
   2          #include "i2c.h"
   3          #include "delay.h"
   4          
   5          #define rtcID 0xD0     // DS1307 ID
   6          
   7          #define SEC_ADDRESS   0x00 // Address to access Ds1307 SEC register
   8          #define DATE_ADDRESS  0x03 // Address to access Ds1307 DATE register
   9          #define CONTROL 0x07       // Address to access Ds1307 CONTROL register
  10          
  11          void rtcInit()
  12          {
  13   1          i2cStart();            // Start I2C communication
  14   1      
  15   1        rtcWrite(rtcID);   // Connect to DS1307 by sending its ID on I2c Bus
  16   1        rtcWrite(CONTROL);     // Select the Ds1307 ControlRegister to configure Ds1307
  17   1      
  18   1        rtcWrite(0x00);        // Write 0x00 to Control register to disable SQW-Out
  19   1      
  20   1        i2cStop();             // Stop I2C communication after initilizing DS1307
  21   1      
  22   1      }
  23          
  24          void rtcWrite(unsigned char dat)
  25          {
  26   1        i2cWrite(dat);   // Connect to DS1307 by sending its ID on I2c Bus
  27   1        i2cClock();
  28   1      }
  29          
  30          unsigned char rtcRead()
  31          {
  32   1        unsigned char dat;
  33   1        dat = i2cRead();   // Connect to DS1307 by sending its ID on I2c Bus
  34   1        return(dat);
  35   1      }
  36          
  37          void rtcSetTime(unsigned char hh, unsigned char mm, unsigned char ss)
  38          {
  39   1        i2cStart();            // Start I2C communication
  40   1      
  41   1        rtcWrite(rtcID);  // connect to DS1307 by sending its ID on I2c Bus
  42   1        rtcWrite(SEC_ADDRESS); // Select the SEC RAM address
  43   1        
  44   1        rtcWrite(ss);     // Write sec on RAM address 00H
  45   1        rtcWrite(mm);     // Write min on RAM address 01H
  46   1        rtcWrite(hh);     // Write hour on RAM address 02H
  47   1      
  48   1        i2cStop();            // Stop I2C communication after Setting the Time
  49   1      }
  50          
  51          void rtcSetDate(unsigned char day, unsigned char dd, unsigned char mm, unsigned char yy)
  52          {
  53   1        i2cStart();            // Start I2C communication
  54   1      
  55   1        rtcWrite(rtcID);  // connect to DS1307 by sending its ID on I2c Bus
C51 COMPILER V9.53.0.0   RTC                                                               09/29/2014 15:33:21 PAGE 2   

  56   1        rtcWrite(DATE_ADDRESS);   // Request DAY RAM address at 04H
  57   1        
  58   1        rtcWrite(day);    // Write day on RAM address 03H
  59   1        rtcWrite(dd);     // Write date on RAM address 04H
  60   1        rtcWrite(mm);     // Write month on RAM address 05H
  61   1        rtcWrite(yy);     // Write year on RAM address 06h
  62   1      
  63   1        i2cStop();        // Stop I2C communication after Setting the Date
  64   1      }
  65          
  66          void rtcGetTime(unsigned char *h_ptr, unsigned char *m_ptr, unsigned char *s_ptr)
  67          {
  68   1        i2cStart();           // Start I2C communication
  69   1      
  70   1        rtcWrite(rtcID);  // connect to DS1307 by sending its ID on I2c Bus
  71   1        rtcWrite(SEC_ADDRESS);        // Request Sec RAM address at 00H
  72   1      
  73   1        i2cStop();      // Stop I2C communication after selecting Sec Register
  74   1      
  75   1        i2cStart();           // Start I2C communication
  76   1        rtcWrite(0xD1);         // connect to DS1307( under Read mode)
  77   1        //by sending its ID on I2c Bus
  78   1      
  79   1        *s_ptr = rtcRead();  i2cAck();     // read second and return Positive ACK
  80   1        *m_ptr = rtcRead();  i2cAck();     // read minute and return Positive ACK
  81   1        *h_ptr = rtcRead();  i2cNAck();   // read hour and return Negative/No ACK
  82   1      
  83   1        i2cStop();            // Stop I2C communication after reading the Time
  84   1      }
  85          
  86          void rtcGetDate(unsigned char *day_ptr, unsigned char *d_ptr, unsigned char *m_ptr, unsigned char *y_ptr)
  87          {
  88   1        i2cStart();            // Start I2C communication
  89   1      
  90   1        rtcWrite(rtcID);  // connect to DS1307 by sending its ID on I2c Bus
  91   1        rtcWrite(DATE_ADDRESS);   // Request DAY RAM address at 04H
  92   1      
  93   1        i2cStop();          // Stop I2C communication after selecting DAY Register
  94   1      
  95   1      
  96   1        i2cStart();           // Start I2C communication
  97   1        rtcWrite(0xD1);         // connect to DS1307( under Read mode)
  98   1        // by sending its ID on I2c Bus
  99   1        
 100   1        *day_ptr = rtcRead(); i2cAck(); //read week day and return Positive ACK
 101   1        *d_ptr = rtcRead(); i2cAck();  // read Day and return Positive ACK
 102   1        *m_ptr = rtcRead(); i2cAck();    // read Month and return Positive ACK
 103   1        *y_ptr = rtcRead(); i2cNAck();   // read Year and return Negative/No ACK
 104   1      
 105   1        i2cStop();      // Stop I2C communication after reading the Time
 106   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    288    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      28
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.53.0.0   RTC                                                               09/29/2014 15:33:21 PAGE 3   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
